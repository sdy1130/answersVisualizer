<h1 class="title">End of Life 2020</h1>
<div class="book_wrapper">
    <a id="next_page_button"></a>
    <a id="prev_page_button"></a>
    <div id="loading" class="loading">Loading pages...</div>
    <div id="mybook" style="display:none;">
        <div class="b-load">
            <div>
                <h1>At the End of My Life...</h1>
                <p>
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras venenatis a massa ac fermentum. Donec tincidunt ligula egestas, bibendum tortor eget, luctus urna. Integer porta maximus quam tristique lacinia. Fusce viverra, nisi in tristique convallis, purus nunc hendrerit ligula, et consectetur diam purus eget ex. Fusce libero tellus, imperdiet ac odio in, placerat imperdiet nisi. Donec ultricies varius odio, mollis malesuada eros. Curabitur elementum est vitae felis fringilla, non finibus leo molestie. Nulla facilisi.
                </p>
                <img src="/assets/click-here-arrow.png" alt="" style="float:right; margin-top:100px"/>
            </div>
            <div>
                <h1>Add your Answer!</h1>
                <p>Contribute your answer to this book! Please keep in mind that you must answer both question for your answer to be submitted. Also checkout what other people has answer to the questions as well!</p>
            </div>
            <div>
                <%= form_with scope: :answer, url: answers_path, :html => {:id=>'form_id'}, local: true do |f| %>
                    <% if @answer.errors.any? %>
                        <div id="error_explanation">
                            <h2>
                                <%= pluralize(@answer.errors.count, "error") %>
                                prohibited your answer from being submitted:
                            </h2>
                            <ul>
                            <% @answer.errors.full_messages.each do |msg| %>
                                <li><%= msg %></li>
                            <% end %>
                            </ul>
                        </div>
                    <% end %>
                    <h1>1. What are your fears about end-of-life?</h1>
                    <%= f.text_area :answer_1, :class => "answer_text_field" %>
                    <br>
                    <br>
                    <br>
                    <h1>2. What legacy are you hoping to leave behind?</h1>
                    <%= f.text_area :answer_2, :class => "answer_text_field" %>
                    <br>
                    <br>
                    <br>
                    <h1>How old are you?</h1>
                    <%= f.select :age, (12..99), {}, {class: "answer_select_field"} %>
                    <br>
                    <br>
                    <br>
                    <h1>Where are you from?</h1>
                    <div class="answer_select_field">
                        <%= f.country_select :country_code, ([ "CA", "US" ]), iso_codes: true, id: :element_id %>
                    </div>
                    <br>
                    <br>
                    <br>
                    <%= link_to 'submit', "/answers", :onclick => "$('#form_id').submit()", :class => "demo" %>
                <% end %>
            </div>

            <%
=begin%>
 <div>
                <img src="/assets/4.jpg" alt="" />
                <h1>Bubbleriffic Image Gallery</h1>
                <p>In this tutorial we will create a bubbly image gallery that
                    shows your /assets in a unique way. The idea is to show the
                    thumbnails of albums in a rounded fashion allowing the
                    user to scroll them automatically by moving the mouse.
                    Clicking on a thumbnail will zoom in a big circle and
                    the full image which will be automatically resized to
                    fit into the screen.</p>
                <a href="http://tympanus.net/codrops/2010/12/10/bubbleriffic-image-gallery/" target="_blank" class="article">Article</a>
                <a href="http://tympanus.net/Tutorials/BubblerifficImageGallery/" target="_blank" class="demo">Demo</a>
            </div> 
<%
=end%>
        </div>
    </div>
</div>
<%
=begin%>
 <div>
    <span class="reference">
        <a href=" http://tympanus.net/codrops/2010/12/14/moleskine-notebook/">back to the Codrops tutorial</a>
        <a href="http://builtbywill.com/code/booklet/" target="_blank">booklet jQuery Plugin</a>
    </span>
</div> 
<%
=end%>

<!-- The JavaScript -->

<script type="text/javascript">
    $(function() {
        var $mybook 		= $('#mybook');
        var $bttn_next		= $('#next_page_button');
        var $bttn_prev		= $('#prev_page_button');
        var $loading		= $('#loading');
        var $mybook_assets	= $mybook.find('img');
        var cnt_assets		= $mybook_assets.length;
        var loaded			= 0;
        //preload all the /assets in the book,
        //and then call the booklet plugin

        $mybook_assets.each(function(){
            var $img 	= $(this);
            var source	= $img.attr('src');
            $('<img/>').load(function(){
                ++loaded;
                if(loaded == cnt_assets){
                    $loading.hide();
                    $bttn_next.show();
                    $bttn_prev.show();
                    $mybook.show().booklet({
                        name:               null,                            // name of the booklet to display in the document title bar
                        width:              1250,                             // container width
                        height:             780,                             // container height
                        speed:              600,                             // speed of the transition between pages
                        direction:          'LTR',                           // direction of the overall content organization, default LTR, left to right, can be RTL for languages which read right to left
                        startingPage:       0,                               // index of the first page to be displayed
                        easing:             'easeInOutQuad',                 // easing method for complete transition
                        easeIn:             'easeInQuad',                    // easing method for first half of transition
                        easeOut:            'easeOutQuad',                   // easing method for second half of transition

                        closed:             true,                           // start with the book "closed", will add empty pages to beginning and end of book
                        closedFrontTitle:   null,                            // used with "closed", "menu" and "pageSelector", determines title of blank starting page
                        closedFrontChapter: null,                            // used with "closed", "menu" and "chapterSelector", determines chapter name of blank starting page
                        closedBackTitle:    null,                            // used with "closed", "menu" and "pageSelector", determines chapter name of blank ending page
                        closedBackChapter:  null,                            // used with "closed", "menu" and "chapterSelector", determines chapter name of blank ending page
                        covers:             false,                           // used with  "closed", makes first and last pages into covers, without page numbers (if enabled)

                        pagePadding:        10,                              // padding for each page wrapper
                        pageNumbers:        true,                            // display page numbers on each page

                        hovers:             false,                            // enables preview pageturn hover animation, shows a small preview of previous or next page on hover
                        overlays:           false,                            // enables navigation using a page sized overlay, when enabled links inside the content will not be clickable
                        tabs:               false,                           // adds tabs along the top of the pages
                        tabWidth:           60,                              // set the width of the tabs
                        tabHeight:          20,                              // set the height of the tabs
                        arrows:             false,                           // adds arrows overlayed over the book edges
                        cursor:             'pointer',                       // cursor css setting for side bar areas

                        hash:               false,                           // enables navigation using a hash string, ex: #/page/1 for page 1, will affect all booklets with 'hash' enabled
                        keyboard:           true,                            // enables navigation with arrow keys (left: previous, right: next)
                        next:               $bttn_next,          			// selector for element to use as click trigger for next page
                        prev:               $bttn_prev,          			// selector for element to use as click trigger for previous page

                        menu:               null,                            // selector for element to use as the menu area, required for 'pageSelector'
                        pageSelector:       false,                           // enables navigation with a dropdown menu of pages, requires 'menu'
                        chapterSelector:    false,                           // enables navigation with a dropdown menu of chapters, determined by the "rel" attribute, requires 'menu'

                        shadows:            true,                            // display shadows on page animations
                        shadowTopFwdWidth:  166,                             // shadow width for top forward anim
                        shadowTopBackWidth: 166,                             // shadow width for top back anim
                        shadowBtmWidth:     50,                              // shadow width for bottom shadow

                        before:             function(){},                    // callback invoked before each page turn animation
                        after:              function(){}                     // callback invoked after each page turn animation
                    });
                    Cufon.refresh();
                }
            }).attr('src',source);
        });
				
    });
</script>